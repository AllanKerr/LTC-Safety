package c371g2.ltc_safety;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.support.test.rule.ActivityTestRule;
import android.support.test.runner.AndroidJUnit4;

import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;

import c371g2.ltc_safety.a_detail.ConcernDetailActivity;
import c371g2.ltc_safety.a_main.ConcernRetractionObserver;
import c371g2.ltc_safety.a_main.ConcernSubmissionObserver;
import c371g2.ltc_safety.a_main.DeviceStorageTests;
import c371g2.ltc_safety.a_main.MainActivity;
import c371g2.ltc_safety.a_new.NewConcernActivity;
import c371g2.ltc_safety.local.ConcernWrapper;

import static org.junit.Assert.assertTrue;

/**
 * This class checks if the AlertDialog generated by InfoDialog can be displayed on each activity.
 */
@RunWith(AndroidJUnit4.class)
public class InfoDialogTests {
    @Rule
    public ActivityTestRule<MainActivity>
            mRule = new ActivityTestRule<>(MainActivity.class, true, false);
    @Rule
    public ActivityTestRule<NewConcernActivity>
            ncRule = new ActivityTestRule<>(NewConcernActivity.class, true, false);
    @Rule
    public ActivityTestRule<ConcernDetailActivity>
            cdRule = new ActivityTestRule<>(ConcernDetailActivity.class, true, false);

    /**
     * Confirm that InfoDialog is functional in MainActivity
     */
    @Test
    public void test_createInfoDialog_MainActivity() {
        Intent i = new Intent();
        i.putExtra("testing",true);
        test(mRule.launchActivity(i));
        mRule.getActivity().finish();
    }

    /**
     * Confirm that InfoDialog is functional in NewConcernActivity
     */
    @Test
    public void test_createInfoDialog_NewConcernActivity() {
        ConcernSubmissionObserver observer = Mockito.mock(ConcernSubmissionObserver.class);
        Intent i = new Intent();
        i.putExtra("observer",observer);
        test(ncRule.launchActivity(i));
        ncRule.getActivity().finish();
    }

    /**
     * Confirm that InfoDialog is functional in ConcernDetailActivity
     */
    @Test
    public void test_createInfoDialog_ConcernDetailActivity() {
        ConcernRetractionObserver observer = Mockito.mock(ConcernRetractionObserver.class);
        ConcernWrapper testConcern = DeviceStorageTests.generateConcernForTest(
                "Jeff",
                "3213884",
                "PixieGod@email.com",
                "UofS",
                "B102",
                "Near Miss",
                "None.",
                "Description"
        );

        Intent i = new Intent();
        i.putExtra("observer",observer);
        i.putExtra("concern",testConcern);
        test(cdRule.launchActivity(i));
        cdRule.getActivity().finish();
    }


    private void test(final AbstractNetworkActivity activity) {
        activity.runOnUiThread(new Runnable() {
            @Override
            public void run() {
                DialogInterface.OnDismissListener listener = Mockito.mock(DialogInterface.OnDismissListener.class);

                String title = "The title!";
                String message = "The message!";
                boolean isCancellable = false;

                AlertDialog dialog = InfoDialog.createInfoDialogue(activity, title, message, listener, isCancellable);
                assertTrue(
                        "Dialog is null when it should have been initialized",
                        dialog != null
                );
                dialog.show();
                assertTrue(
                        "Dialog is not showing when it should be",
                        dialog.isShowing()
                );
                dialog.cancel();
                assertTrue(
                        "Dialog is still showing when it was cancelled",
                        !dialog.isShowing()
                );
                assertTrue(
                        "InfoDialog.createInfoDialogue(...) should not initialize progressDialog, but it did.",
                        activity.progressDialog==null
                );
            }
        });
    }
}
