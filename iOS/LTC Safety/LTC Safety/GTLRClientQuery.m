// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   User API (client/v1)
// Description:
//   This is an API

#import "GTLRClientQuery.h"

#import "GTLRClientObjects.h"

@implementation GTLRClientQuery

@dynamic fields;

@end

@implementation GTLRClientQuery_FetchConcerns

+ (instancetype)queryWithObject:(GTLRClient_OwnerTokenListWrapper *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"concern/fetchConcerns";
  GTLRClientQuery_FetchConcerns *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRClient_ConcernCollection class];
  query.loggingName = @"client.fetchConcerns";
  return query;
}

@end

@implementation GTLRClientQuery_RetractConcern

+ (instancetype)queryWithObject:(GTLRClient_OwnerToken *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"concern/retract";
  GTLRClientQuery_RetractConcern *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRClient_UpdateConcernStatusResponse class];
  query.loggingName = @"client.retractConcern";
  return query;
}

@end

@implementation GTLRClientQuery_SubmitConcern

+ (instancetype)queryWithObject:(GTLRClient_ConcernData *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"concern/submit";
  GTLRClientQuery_SubmitConcern *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRClient_SubmitConcernResponse class];
  query.loggingName = @"client.submitConcern";
  return query;
}

@end

@implementation GTLRClientQuery_SubmitTestConcern

@dynamic isTest;

+ (instancetype)queryWithObject:(GTLRClient_ConcernData *)object
                         isTest:(BOOL)isTest {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"test/concern/submit";
  GTLRClientQuery_SubmitTestConcern *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.isTest = isTest;
  query.expectedObjectClass = [GTLRClient_SubmitConcernResponse class];
  query.loggingName = @"client.submitTestConcern";
  return query;
}

@end
